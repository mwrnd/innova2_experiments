#*****************************************************************************************
# Vivado (TM) v2021.2 (64-bit)
#
# innova2-riscv.tcl: Tcl script for re-creating project 'innova2-riscv'
#
# Generated by Vivado on Tue Nov 22 23:22:55 EDT 2022
# IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (innova2-riscv.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "./vivado-risc-v_workspace/rocket64b4l2w/srams.v"
#    "./vivado-risc-v_workspace/rocket64b4l2w/system-innova2.v"
#    "./vivado-risc-v_workspace/rocket64b4l2w/rocket.vhdl"
#    "./vivado-risc-v/uart/uart.v"
#    "./vivado-risc-v/board/innova2/riscv_wrapper.v"
#    "./vivado-risc-v/board/innova2/ethernet-innova2.v"
#    "./vivado-risc-v/board/mem-reset-control.v"
#    "./vivado-risc-v/board/fan-control.v"
#    "./vivado-risc-v/board/innova2/top.xdc"
#    "./vivado-risc-v/board/innova2/sdc.xdc"
#    "./vivado-risc-v/board/innova2/uart.xdc"
#    "./vivado-risc-v/board/innova2/ethernet.xdc"
#    "./vivado-risc-v/board/timing-constraints.tcl"
#    "./vivado-risc-v/sdc/sd_defines.h"
#    "./vivado-risc-v/sdc/axi_sdc_controller.v"
#    "./vivado-risc-v/sdc/sd_cmd_master.v"
#    "./vivado-risc-v/sdc/sd_cmd_serial_host.v"
#    "./vivado-risc-v/sdc/sd_data_master.v"
#    "./vivado-risc-v/sdc/sd_data_serial_host.v"
#    "./vivado-risc-v/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl"
#    "./vivado-risc-v/ethernet/ethernet.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_10g.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_10g_fifo.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_tx.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_if.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_tx_if.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_ber_mon.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_frame_sync.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_watchdog.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_rx_32.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_rx_64.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_tx_32.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_tx_64.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/xgmii_baser_dec_64.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/xgmii_baser_enc_64.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/sync_reset.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_adapter.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo_adapter.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/rtl/lfsr.v"
#    "./vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/sync_reset.tcl"
#    "./vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/axis_async_fifo.tcl"
#    "./vivado-risc-v/ethernet/verilog-ethernet/syn/vivado/eth_mac_fifo.tcl"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/ethernet.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v_workspace/rocket64b4l2w/srams.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v_workspace/rocket64b4l2w/system-innova2.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v_workspace/rocket64b4l2w/rocket.vhdl"]"\
 "[file normalize "$origin_dir/vivado-risc-v/uart/uart.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/innova2/riscv_wrapper.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/sdc/sd_defines.h"]"\
 "[file normalize "$origin_dir/vivado-risc-v/sdc/axi_sdc_controller.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/sdc/sd_cmd_master.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/sdc/sd_cmd_serial_host.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/sdc/sd_data_master.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/sdc/sd_data_serial_host.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/innova2/ethernet-innova2.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/mem-reset-control.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/fan-control.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_10g.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_10g_fifo.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_tx.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_if.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_tx_if.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_ber_mon.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_frame_sync.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_watchdog.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_rx_32.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_rx_64.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_tx_32.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_tx_64.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/xgmii_baser_dec_64.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/xgmii_baser_enc_64.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/sync_reset.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_adapter.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo_adapter.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/rtl/lfsr.v"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/innova2/top.xdc"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/innova2/sdc.xdc"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/innova2/uart.xdc"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/innova2/ethernet.xdc"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/sync_reset.tcl"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/axis_async_fifo.tcl"]"\
 "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/syn/vivado/eth_mac_fifo.tcl"]"\
 "[file normalize "$origin_dir/vivado-risc-v/board/timing-constraints.tcl"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "innova2-riscv"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "innova2-riscv.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcku15p-ffve1517-2-i

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcku15p-ffve1517-2-i" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/ethernet.v"] \
 [file normalize "${origin_dir}/vivado-risc-v_workspace/rocket64b4l2w/srams.v"] \
 [file normalize "${origin_dir}/vivado-risc-v_workspace/rocket64b4l2w/system-innova2.v"] \
 [file normalize "${origin_dir}/vivado-risc-v_workspace/rocket64b4l2w/rocket.vhdl"] \
 [file normalize "${origin_dir}/vivado-risc-v/uart/uart.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/board/innova2/riscv_wrapper.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/sdc/sd_defines.h"] \
 [file normalize "${origin_dir}/vivado-risc-v/sdc/axi_sdc_controller.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/sdc/sd_cmd_master.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/sdc/sd_cmd_serial_host.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/sdc/sd_data_master.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/sdc/sd_data_serial_host.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl"] \
 [file normalize "${origin_dir}/vivado-risc-v/board/innova2/ethernet-innova2.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/board/mem-reset-control.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/board/fan-control.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_10g.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_mac_10g_fifo.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_tx.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_if.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_tx_if.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_ber_mon.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_frame_sync.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/eth_phy_10g_rx_watchdog.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_rx_32.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_rx_64.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_tx_32.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/axis_xgmii_tx_64.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/xgmii_baser_dec_64.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/xgmii_baser_enc_64.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/sync_reset.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_adapter.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/rtl/axis_async_fifo_adapter.v"] \
 [file normalize "${origin_dir}/vivado-risc-v/ethernet/verilog-ethernet/rtl/lfsr.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "${origin_dir}/vivado-risc-v_workspace/rocket64b4l2w/rocket.vhdl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/vivado-risc-v/sdc/sd_defines.h"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/vivado-risc-v/vhdl-wrapper/src/net/largest/riscv/vhdl/bscan2jtag.vhdl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "riscv_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/board/innova2/top.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/board/innova2/top.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/board/innova2/sdc.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/board/innova2/sdc.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/board/innova2/uart.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/board/innova2/uart.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/board/innova2/ethernet.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/board/innova2/ethernet.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/sync_reset.tcl"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/sync_reset.tcl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/axis_async_fifo.tcl"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/lib/axis/syn/vivado/axis_async_fifo.tcl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/syn/vivado/eth_mac_fifo.tcl"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/ethernet/verilog-ethernet/syn/vivado/eth_mac_fifo.tcl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/vivado-risc-v/board/timing-constraints.tcl"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/vivado-risc-v/board/timing-constraints.tcl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xcku15p-ffve1517-2-i" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "ethernet_innova2" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files ethernet.v] == "" } {
  import_files -quiet -fileset sources_1 vivado-risc-v/ethernet/ethernet.v
}
if { [get_files ethernet.v] == "" } {
  import_files -quiet -fileset sources_1 vivado-risc-v/ethernet/ethernet.v
}
if { [get_files srams.v] == "" } {
  import_files -quiet -fileset sources_1 vivado-risc-v_workspace/rocket64b4l2w/srams.v
}
if { [get_files system-innova2.v] == "" } {
  import_files -quiet -fileset sources_1 vivado-risc-v_workspace/rocket64b4l2w/system-innova2.v
}
if { [get_files rocket.vhdl] == "" } {
  import_files -quiet -fileset sources_1 vivado-risc-v_workspace/rocket64b4l2w/rocket.vhdl
}
if { [get_files uart.v] == "" } {
  import_files -quiet -fileset sources_1 vivado-risc-v/uart/uart.v
}
if { [get_files uart.v] == "" } {
  import_files -quiet -fileset sources_1 vivado-risc-v/uart/uart.v
}


# Proc to create BD riscv
proc cr_bd_riscv { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# ethernet, ethernet, Rocket64b4l2w, uart, uart



  # CHANGE DESIGN NAME HERE
  set design_name riscv

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  # Add USER_COMMENTS on $design_name
  set_property USER_COMMENTS.comment_0 "axi_gpio_2 bit definitions:

0 - RocketChip - sys_reset
1 - RocketChip - clock_ok
2 - RocketChip - mem_ok = ddr4-c0_init_calib_complete
3 - RocketChip - io_ok = xdma-user_lnk_up
4 - pcie_perstn
5 - c0_ddr4_ui_clk_sync_rst
6 - NOT(pcie_perstn)
7 - axi_gpio_1 --> OR --> RocketChip_sys_reset" [get_bd_designs $design_name]

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_iic:2.1\
  xilinx.com:ip:axi_bram_ctrl:4.1\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:ddr4:2.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:xdma:4.1\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  ethernet\
  ethernet\
  Rocket64b4l2w\
  uart\
  uart\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set ddr4_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 ddr4_rtl_0 ]

  set diff_clock_rtl_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 diff_clock_rtl_0 ]

  set iic_main [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 iic_main ]

  set pcie_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_0 ]

  set pcie_refclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_refclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_refclk


  # Create ports
  set LED0 [ create_bd_port -dir O LED0 ]
  set TxD_0 [ create_bd_port -dir O TxD_0 ]
  set pcie_perstn [ create_bd_port -dir I -type rst pcie_perstn ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_perstn

  # Create instance: Ethernet, and set properties
  set block_name ethernet
  set block_cell_name Ethernet
  if { [catch {set Ethernet [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Ethernet eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.axis_word_bits {64} \
   CONFIG.burst_size {64} \
   CONFIG.dma_addr_bits {40} \
   CONFIG.dma_word_bits {64} \
   CONFIG.enable_mdio {0} \
 ] $Ethernet

  # Create instance: Ethernet2, and set properties
  set block_name ethernet
  set block_cell_name Ethernet2
  if { [catch {set Ethernet2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Ethernet2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.axis_word_bits {64} \
   CONFIG.burst_size {64} \
   CONFIG.dma_addr_bits {40} \
   CONFIG.dma_word_bits {64} \
   CONFIG.enable_mdio {0} \
 ] $Ethernet2

  # Create instance: IIC, and set properties
  set IIC [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.1 IIC ]
  set_property -dict [ list \
   CONFIG.IIC_BOARD_INTERFACE {Custom} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $IIC

  # Create instance: RocketChip, and set properties
  set block_name Rocket64b4l2w
  set block_cell_name RocketChip
  if { [catch {set RocketChip [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $RocketChip eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: UART, and set properties
  set block_name uart
  set block_cell_name UART
  if { [catch {set UART [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $UART eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.BAUD_RATE {115200} \
 ] $UART

  # Create instance: UART2, and set properties
  set block_name uart
  set block_cell_name UART2
  if { [catch {set UART2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $UART2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.BAUD_RATE {115200} \
 ] $UART2

  # Create instance: axi_bram_ctrl_0, and set properties
  set axi_bram_ctrl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 axi_bram_ctrl_0 ]
  set_property -dict [ list \
   CONFIG.DATA_WIDTH {1024} \
   CONFIG.SINGLE_PORT_BRAM {0} \
 ] $axi_bram_ctrl_0

  # Create instance: axi_bram_ctrl_0_bram, and set properties
  set axi_bram_ctrl_0_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 axi_bram_ctrl_0_bram ]
  set_property -dict [ list \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
 ] $axi_bram_ctrl_0_bram

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {0} \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {16} \
 ] $axi_gpio_0

  # Create instance: axi_gpio_1, and set properties
  set axi_gpio_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_1 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_1

  # Create instance: axi_gpio_2, and set properties
  set axi_gpio_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_2 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_GPIO_WIDTH {8} \
 ] $axi_gpio_2

  # Create instance: axi_gpio_3, and set properties
  set axi_gpio_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_3 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {16} \
 ] $axi_gpio_3

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {40.0} \
   CONFIG.CLKOUT1_JITTER {117.659} \
   CONFIG.CLKOUT1_PHASE_ERROR {85.928} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {62.5} \
   CONFIG.CLKOUT2_DRIVES {BUFG} \
   CONFIG.CLKOUT2_JITTER {107.111} \
   CONFIG.CLKOUT2_PHASE_ERROR {85.928} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {100} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLKOUT3_JITTER {194.337} \
   CONFIG.CLKOUT3_PHASE_ERROR {204.239} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {100.000} \
   CONFIG.CLKOUT3_USED {false} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {4.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {4.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {16.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {10} \
   CONFIG.MMCM_CLKOUT2_DIVIDE {1} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {2} \
   CONFIG.OPTIMIZE_CLOCKING_STRUCTURE_EN {true} \
   CONFIG.PRIM_SOURCE {Global_buffer} \
   CONFIG.USE_PHASE_ALIGNMENT {false} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: ddr4_0, and set properties
  set ddr4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ddr4:2.2 ddr4_0 ]
  set_property -dict [ list \
   CONFIG.C0.DDR4_AxiAddressWidth {33} \
   CONFIG.C0.DDR4_AxiArbitrationScheme {ROUND_ROBIN} \
   CONFIG.C0.DDR4_AxiDataWidth {512} \
   CONFIG.C0.DDR4_CLKOUT0_DIVIDE {8} \
   CONFIG.C0.DDR4_CasLatency {12} \
   CONFIG.C0.DDR4_CasWriteLatency {11} \
   CONFIG.C0.DDR4_DataWidth {64} \
   CONFIG.C0.DDR4_InputClockPeriod {9996} \
   CONFIG.C0.DDR4_MemoryPart {MT40A1G16WBU-083E} \
   CONFIG.C0.DDR4_TimePeriod {1428} \
 ] $ddr4_0

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: resetn_inv_0, and set properties
  set resetn_inv_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 resetn_inv_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $resetn_inv_0

  # Create instance: smartconnect_0, and set properties
  set smartconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {4} \
   CONFIG.NUM_MI {8} \
   CONFIG.NUM_SI {1} \
 ] $smartconnect_0

  # Create instance: smartconnect_1, and set properties
  set smartconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_1 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {3} \
   CONFIG.NUM_SI {4} \
 ] $smartconnect_1

  # Create instance: smartconnect_2, and set properties
  set smartconnect_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_2 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {2} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
 ] $smartconnect_2

  # Create instance: smartconnect_4, and set properties
  set smartconnect_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 smartconnect_4 ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {2} \
   CONFIG.NUM_MI {3} \
   CONFIG.NUM_SI {1} \
 ] $smartconnect_4

  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 system_ila_0 ]
  set_property -dict [ list \
   CONFIG.ALL_PROBE_SAME_MU_CNT {2} \
   CONFIG.C_ADV_TRIGGER {true} \
   CONFIG.C_DATA_DEPTH {32768} \
   CONFIG.C_EN_STRG_QUAL {1} \
   CONFIG.C_INPUT_PIPE_STAGES {1} \
   CONFIG.C_MON_TYPE {INTERFACE} \
   CONFIG.C_NUM_MONITOR_SLOTS {2} \
   CONFIG.C_PROBE0_MU_CNT {2} \
   CONFIG.C_SLOT {0} \
   CONFIG.C_SLOT_0_APC_EN {0} \
   CONFIG.C_SLOT_0_AXI_AR_SEL_DATA {1} \
   CONFIG.C_SLOT_0_AXI_AR_SEL_TRIG {1} \
   CONFIG.C_SLOT_0_AXI_AW_SEL_DATA {1} \
   CONFIG.C_SLOT_0_AXI_AW_SEL_TRIG {1} \
   CONFIG.C_SLOT_0_AXI_B_SEL_DATA {1} \
   CONFIG.C_SLOT_0_AXI_B_SEL_TRIG {1} \
   CONFIG.C_SLOT_0_AXI_R_SEL_DATA {1} \
   CONFIG.C_SLOT_0_AXI_R_SEL_TRIG {1} \
   CONFIG.C_SLOT_0_AXI_W_SEL_DATA {1} \
   CONFIG.C_SLOT_0_AXI_W_SEL_TRIG {1} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:aximm_rtl:1.0} \
   CONFIG.C_SLOT_0_MAX_RD_BURSTS {32} \
   CONFIG.C_SLOT_0_MAX_WR_BURSTS {32} \
   CONFIG.C_SLOT_1_APC_EN {0} \
   CONFIG.C_SLOT_1_AXI_AR_SEL_DATA {1} \
   CONFIG.C_SLOT_1_AXI_AR_SEL_TRIG {1} \
   CONFIG.C_SLOT_1_AXI_AW_SEL_DATA {1} \
   CONFIG.C_SLOT_1_AXI_AW_SEL_TRIG {1} \
   CONFIG.C_SLOT_1_AXI_B_SEL_DATA {1} \
   CONFIG.C_SLOT_1_AXI_B_SEL_TRIG {1} \
   CONFIG.C_SLOT_1_AXI_R_SEL_DATA {1} \
   CONFIG.C_SLOT_1_AXI_R_SEL_TRIG {1} \
   CONFIG.C_SLOT_1_AXI_W_SEL_DATA {1} \
   CONFIG.C_SLOT_1_AXI_W_SEL_TRIG {1} \
   CONFIG.C_SLOT_1_INTF_TYPE {xilinx.com:interface:aximm_rtl:1.0} \
   CONFIG.C_SLOT_1_MAX_RD_BURSTS {32} \
   CONFIG.C_SLOT_1_MAX_WR_BURSTS {32} \
 ] $system_ila_0

  # Create instance: util_ds_buf, and set properties
  set util_ds_buf [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
   CONFIG.DIFF_CLK_IN_BOARD_INTERFACE {Custom} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $util_ds_buf

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_logic_0

  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_logic_1

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9038} \
   CONFIG.PF0_SRIOV_VF_DEVICE_ID {A038} \
   CONFIG.PF1_SRIOV_VF_DEVICE_ID {A138} \
   CONFIG.PF2_DEVICE_ID_mqdma {9238} \
   CONFIG.PF2_SRIOV_VF_DEVICE_ID {A238} \
   CONFIG.PF3_DEVICE_ID_mqdma {9338} \
   CONFIG.PF3_SRIOV_VF_DEVICE_ID {A338} \
   CONFIG.axi_data_width {256_bit} \
   CONFIG.axilite_master_en {false} \
   CONFIG.axilite_master_size {1} \
   CONFIG.axisten_freq {250} \
   CONFIG.cfg_mgmt_if {false} \
   CONFIG.coreclk_freq {500} \
   CONFIG.pciebar2axibar_axil_master {0x60000000} \
   CONFIG.pf0_base_class_menu {Memory_controller} \
   CONFIG.pf0_class_code {058000} \
   CONFIG.pf0_class_code_base {05} \
   CONFIG.pf0_class_code_interface {00} \
   CONFIG.pf0_class_code_sub {80} \
   CONFIG.pf0_device_id {9038} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_0} \
   CONFIG.pf0_msix_cap_table_bir {BAR_0} \
   CONFIG.pf0_sub_class_interface_menu {Other_memory_controller} \
   CONFIG.pl_link_cap_max_link_speed {8.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X8} \
   CONFIG.plltype {QPLL1} \
   CONFIG.xdma_rnum_chnl {4} \
   CONFIG.xdma_wnum_chnl {4} \
 ] $xdma_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {8} \
 ] $xlconcat_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {8} \
 ] $xlconcat_3

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {1} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net C0_SYS_CLK_0_1 [get_bd_intf_ports diff_clock_rtl_0] [get_bd_intf_pins ddr4_0/C0_SYS_CLK]
  connect_bd_intf_net -intf_net Ethernet2_M_AXI [get_bd_intf_pins Ethernet2/M_AXI] [get_bd_intf_pins smartconnect_1/S02_AXI]
  connect_bd_intf_net -intf_net Ethernet2_TX_AXIS [get_bd_intf_pins Ethernet/RX_AXIS] [get_bd_intf_pins Ethernet2/TX_AXIS]
  connect_bd_intf_net -intf_net Ethernet_M_AXI [get_bd_intf_pins Ethernet/M_AXI] [get_bd_intf_pins smartconnect_2/S00_AXI]
  connect_bd_intf_net -intf_net Ethernet_TX_AXIS [get_bd_intf_pins Ethernet/TX_AXIS] [get_bd_intf_pins Ethernet2/RX_AXIS]
  connect_bd_intf_net -intf_net RocketChip_IO_AXI4 [get_bd_intf_pins RocketChip/IO_AXI4] [get_bd_intf_pins smartconnect_4/S00_AXI]
  connect_bd_intf_net -intf_net RocketChip_MEM_AXI4 [get_bd_intf_pins RocketChip/MEM_AXI4] [get_bd_intf_pins smartconnect_1/S00_AXI]
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTA [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTA] [get_bd_intf_pins axi_bram_ctrl_0_bram/BRAM_PORTA]
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTB [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTB] [get_bd_intf_pins axi_bram_ctrl_0_bram/BRAM_PORTB]
  connect_bd_intf_net -intf_net axi_iic_0_IIC [get_bd_intf_ports iic_main] [get_bd_intf_pins IIC/IIC]
  connect_bd_intf_net -intf_net ddr4_1_C0_DDR4 [get_bd_intf_ports ddr4_rtl_0] [get_bd_intf_pins ddr4_0/C0_DDR4]
  connect_bd_intf_net -intf_net pcie_refclk [get_bd_intf_ports pcie_refclk] [get_bd_intf_pins util_ds_buf/CLK_IN_D]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins UART2/S_AXI_LITE] [get_bd_intf_pins smartconnect_0/M00_AXI]
connect_bd_intf_net -intf_net [get_bd_intf_nets smartconnect_0_M00_AXI] [get_bd_intf_pins smartconnect_0/M00_AXI] [get_bd_intf_pins system_ila_0/SLOT_1_AXI]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets smartconnect_0_M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M01_AXI [get_bd_intf_pins Ethernet2/S_AXI_LITE] [get_bd_intf_pins smartconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M05_AXI [get_bd_intf_pins axi_bram_ctrl_0/S_AXI] [get_bd_intf_pins smartconnect_0/M05_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M06_AXI [get_bd_intf_pins axi_gpio_3/S_AXI] [get_bd_intf_pins smartconnect_0/M06_AXI]
  connect_bd_intf_net -intf_net smartconnect_0_M07_AXI [get_bd_intf_pins smartconnect_0/M07_AXI] [get_bd_intf_pins smartconnect_1/S03_AXI]
  connect_bd_intf_net -intf_net smartconnect_1_M00_AXI [get_bd_intf_pins ddr4_0/C0_DDR4_S_AXI] [get_bd_intf_pins smartconnect_1/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_2_M00_AXI [get_bd_intf_pins RocketChip/DMA_AXI4] [get_bd_intf_pins smartconnect_2/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_2_M01_AXI [get_bd_intf_pins smartconnect_1/S01_AXI] [get_bd_intf_pins smartconnect_2/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_4_M00_AXI [get_bd_intf_pins UART/S_AXI_LITE] [get_bd_intf_pins smartconnect_4/M00_AXI]
connect_bd_intf_net -intf_net [get_bd_intf_nets smartconnect_4_M00_AXI] [get_bd_intf_pins smartconnect_4/M00_AXI] [get_bd_intf_pins system_ila_0/SLOT_0_AXI]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets smartconnect_4_M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_4_M01_AXI [get_bd_intf_pins Ethernet/S_AXI_LITE] [get_bd_intf_pins smartconnect_4/M01_AXI]
  connect_bd_intf_net -intf_net smartconnect_4_M02_AXI [get_bd_intf_pins axi_gpio_1/S_AXI] [get_bd_intf_pins smartconnect_0/M02_AXI]
  connect_bd_intf_net -intf_net smartconnect_4_M02_AXI1 [get_bd_intf_pins IIC/S_AXI] [get_bd_intf_pins smartconnect_4/M02_AXI]
  connect_bd_intf_net -intf_net smartconnect_4_M03_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins smartconnect_0/M03_AXI]
  connect_bd_intf_net -intf_net smartconnect_4_M04_AXI [get_bd_intf_pins axi_gpio_2/S_AXI] [get_bd_intf_pins smartconnect_0/M04_AXI]
  connect_bd_intf_net -intf_net xdma_0_M_AXI [get_bd_intf_pins smartconnect_0/S00_AXI] [get_bd_intf_pins xdma_0/M_AXI]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pcie_0] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net DDR_c0_ddr4_ui_clk_sync_rst [get_bd_pins ddr4_0/c0_ddr4_ui_clk_sync_rst] [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins xlconcat_3/In5]
  connect_bd_net -net DDR_clock [get_bd_pins ddr4_0/c0_ddr4_ui_clk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk] [get_bd_pins smartconnect_0/aclk2] [get_bd_pins smartconnect_1/aclk1]
  connect_bd_net -net Ethernet_interrupt [get_bd_pins Ethernet/interrupt] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net RocketChip_aresetn [get_bd_pins RocketChip/aresetn] [get_bd_pins util_vector_logic_1/Op2]
  connect_bd_net -net RocketChip_clock [get_bd_pins RocketChip/clock] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins smartconnect_0/aclk1] [get_bd_pins smartconnect_1/aclk] [get_bd_pins smartconnect_2/aclk1] [get_bd_pins smartconnect_4/aclk]
  connect_bd_net -net UART2_RTSn [get_bd_pins UART/CTSn] [get_bd_pins UART2/RTSn]
  connect_bd_net -net UART2_TxD [get_bd_pins UART/RxD] [get_bd_pins UART2/TxD]
  connect_bd_net -net UART_RTSn [get_bd_pins UART/RTSn] [get_bd_pins UART2/CTSn]
  connect_bd_net -net UART_TxD [get_bd_ports TxD_0] [get_bd_pins UART/TxD] [get_bd_pins UART2/RxD]
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins Ethernet/status_vector] [get_bd_pins axi_gpio_0/gpio_io_o]
  connect_bd_net -net axi_gpio_1_gpio_io_o [get_bd_pins axi_gpio_1/gpio_io_o] [get_bd_pins util_vector_logic_0/Op2] [get_bd_pins xlconcat_3/In7]
  connect_bd_net -net axi_gpio_3_gpio_io_o [get_bd_pins Ethernet2/status_vector] [get_bd_pins axi_gpio_3/gpio_io_o]
  connect_bd_net -net axi_iic_0_iic2intc_irpt [get_bd_pins IIC/iic2intc_irpt] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins Ethernet/clock] [get_bd_pins Ethernet2/clock] [get_bd_pins IIC/s_axi_aclk] [get_bd_pins UART/clock] [get_bd_pins UART2/clock] [get_bd_pins axi_bram_ctrl_0/s_axi_aclk] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_gpio_1/s_axi_aclk] [get_bd_pins axi_gpio_2/s_axi_aclk] [get_bd_pins axi_gpio_3/s_axi_aclk] [get_bd_pins clk_wiz_0/clk_out2] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins smartconnect_0/aclk] [get_bd_pins smartconnect_1/aclk2] [get_bd_pins smartconnect_2/aclk] [get_bd_pins smartconnect_4/aclk1] [get_bd_pins system_ila_0/clk]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins RocketChip/clock_ok] [get_bd_pins clk_wiz_0/locked] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net ddr4_1_c0_init_calib_complete [get_bd_pins RocketChip/mem_ok] [get_bd_pins ddr4_0/c0_init_calib_complete] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net interrupts [get_bd_pins RocketChip/interrupts] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net pcie_perstn [get_bd_ports pcie_perstn] [get_bd_pins resetn_inv_0/Op1] [get_bd_pins xdma_0/sys_rst_n] [get_bd_pins xlconcat_3/In4]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins Ethernet/async_resetn] [get_bd_pins Ethernet2/async_resetn] [get_bd_pins IIC/s_axi_aresetn] [get_bd_pins UART2/async_resetn] [get_bd_pins axi_bram_ctrl_0/s_axi_aresetn] [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_gpio_1/s_axi_aresetn] [get_bd_pins axi_gpio_2/s_axi_aresetn] [get_bd_pins axi_gpio_3/s_axi_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn] [get_bd_pins proc_sys_reset_1/ext_reset_in] [get_bd_pins smartconnect_0/aresetn] [get_bd_pins smartconnect_1/aresetn] [get_bd_pins smartconnect_2/aresetn] [get_bd_pins smartconnect_4/aresetn] [get_bd_pins system_ila_0/resetn] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_pins ddr4_0/c0_ddr4_aresetn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net qdma_0_user_lnk_up1 [get_bd_ports LED0] [get_bd_pins RocketChip/io_ok] [get_bd_pins xdma_0/user_lnk_up] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net reset [get_bd_pins ddr4_0/sys_rst] [get_bd_pins resetn_inv_0/Res] [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins xlconcat_3/In6]
  connect_bd_net -net uart_0_interrupt [get_bd_pins UART/interrupt] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net util_ds_buf_IBUF_DS_ODIV2 [get_bd_pins util_ds_buf/IBUF_DS_ODIV2] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net util_ds_buf_IBUF_OUT [get_bd_pins util_ds_buf/IBUF_OUT] [get_bd_pins xdma_0/sys_clk_gt]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins RocketChip/sys_reset] [get_bd_pins util_vector_logic_0/Res] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins UART/async_resetn] [get_bd_pins util_vector_logic_1/Res]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins smartconnect_0/aclk3] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins axi_gpio_2/gpio_io_i] [get_bd_pins xlconcat_3/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins Ethernet/mdio_int] [get_bd_pins Ethernet2/mdio_int] [get_bd_pins xlconcat_0/In1] [get_bd_pins xlconcat_0/In4] [get_bd_pins xlconcat_0/In5] [get_bd_pins xlconcat_0/In6] [get_bd_pins xlconcat_0/In7] [get_bd_pins xlconstant_0/dout]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces Ethernet/M_AXI] [get_bd_addr_segs RocketChip/DMA_AXI4/reg0] -force
  assign_bd_address -offset 0x80000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces Ethernet2/M_AXI] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x60020000 -range 0x00010000 -target_address_space [get_bd_addr_spaces RocketChip/IO_AXI4] [get_bd_addr_segs Ethernet/S_AXI_LITE/reg0] -force
  assign_bd_address -offset 0x60040000 -range 0x00010000 -target_address_space [get_bd_addr_spaces RocketChip/IO_AXI4] [get_bd_addr_segs IIC/S_AXI/Reg] -force
  assign_bd_address -offset 0x60010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces RocketChip/IO_AXI4] [get_bd_addr_segs UART/S_AXI_LITE/reg0] -force
  assign_bd_address -offset 0x80000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces RocketChip/MEM_AXI4] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x60120000 -range 0x00010000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs Ethernet2/S_AXI_LITE/reg0] -force
  assign_bd_address -offset 0x60100000 -range 0x00010000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs UART2/S_AXI_LITE/reg0] -force
  assign_bd_address -offset 0x70200000 -range 0x00020000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0] -force
  assign_bd_address -offset 0x60710000 -range 0x00010000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs axi_gpio_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x60720000 -range 0x00010000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs axi_gpio_1/S_AXI/Reg] -force
  assign_bd_address -offset 0x60730000 -range 0x00010000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs axi_gpio_2/S_AXI/Reg] -force
  assign_bd_address -offset 0x60740000 -range 0x00010000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs axi_gpio_3/S_AXI/Reg] -force
  assign_bd_address -offset 0x80000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force

  # Exclude Address Segments
  exclude_bd_addr_seg -offset 0x80000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces Ethernet/M_AXI] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK]

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.772849",
   "Default View_TopLeft":"1652,801",
   "ExpandedHierarchyInLayout":"",
   "comment_0":"axi_gpio_2 bit definitions:

0 - RocketChip - sys_reset
1 - RocketChip - clock_ok
2 - RocketChip - mem_ok = ddr4-c0_init_calib_complete
3 - RocketChip - io_ok = xdma-user_lnk_up
4 - pcie_perstn
5 - c0_ddr4_ui_clk_sync_rst
6 - NOT(pcie_perstn)
7 - axi_gpio_1 --> OR --> RocketChip_sys_reset",
   "commentid":"comment_0|",
   "fillcolor_comment_0":"",
   "font_comment_0":"14",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port ddr4_rtl_0 -pg 1 -lvl 11 -x 3580 -y 1240 -defaultsOSRD
preplace port diff_clock_rtl_0 -pg 1 -lvl 0 -x 0 -y 1000 -defaultsOSRD
preplace port iic_main -pg 1 -lvl 11 -x 3580 -y 1010 -defaultsOSRD
preplace port pcie_0 -pg 1 -lvl 11 -x 3580 -y 1480 -defaultsOSRD
preplace port pcie_refclk -pg 1 -lvl 0 -x 0 -y 1470 -defaultsOSRD
preplace port port-id_LED0 -pg 1 -lvl 11 -x 3580 -y 1500 -defaultsOSRD
preplace port port-id_TxD_0 -pg 1 -lvl 11 -x 3580 -y 220 -defaultsOSRD
preplace port port-id_pcie_perstn -pg 1 -lvl 0 -x 0 -y 1500 -defaultsOSRD
preplace inst Ethernet -pg 1 -lvl 5 -x 1590 -y 1000 -defaultsOSRD
preplace inst Ethernet2 -pg 1 -lvl 4 -x 1200 -y 760 -defaultsOSRD
preplace inst IIC -pg 1 -lvl 9 -x 3130 -y 1030 -defaultsOSRD
preplace inst RocketChip -pg 1 -lvl 7 -x 2340 -y 980 -defaultsOSRD
preplace inst axi_bram_ctrl_0 -pg 1 -lvl 4 -x 1200 -y 80 -defaultsOSRD
preplace inst axi_bram_ctrl_0_bram -pg 1 -lvl 5 -x 1590 -y 80 -defaultsOSRD
preplace inst axi_gpio_0 -pg 1 -lvl 4 -x 1200 -y 980 -defaultsOSRD
preplace inst axi_gpio_1 -pg 1 -lvl 4 -x 1200 -y 1580 -defaultsOSRD
preplace inst axi_gpio_2 -pg 1 -lvl 4 -x 1200 -y 1720 -defaultsOSRD
preplace inst axi_gpio_3 -pg 1 -lvl 4 -x 1200 -y 540 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 1 -x 120 -y 1380 -defaultsOSRD
preplace inst ddr4_0 -pg 1 -lvl 9 -x 3130 -y 1290 -defaultsOSRD
preplace inst proc_sys_reset_0 -pg 1 -lvl 2 -x 410 -y 1260 -defaultsOSRD
preplace inst proc_sys_reset_1 -pg 1 -lvl 8 -x 2720 -y 1150 -defaultsOSRD
preplace inst resetn_inv_0 -pg 1 -lvl 5 -x 1590 -y 1540 -defaultsOSRD
preplace inst smartconnect_0 -pg 1 -lvl 3 -x 770 -y 1130 -defaultsOSRD
preplace inst smartconnect_1 -pg 1 -lvl 8 -x 2720 -y 900 -defaultsOSRD
preplace inst smartconnect_2 -pg 1 -lvl 6 -x 1960 -y 990 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 5 -x 1590 -y 780 -defaultsOSRD
preplace inst util_ds_buf -pg 1 -lvl 8 -x 2720 -y 1470 -defaultsOSRD
preplace inst util_vector_logic_0 -pg 1 -lvl 6 -x 1960 -y 1550 -defaultsOSRD
preplace inst xdma_0 -pg 1 -lvl 9 -x 3130 -y 1530 -defaultsOSRD
preplace inst xlconcat_0 -pg 1 -lvl 6 -x 1960 -y 770 -defaultsOSRD
preplace inst xlconcat_3 -pg 1 -lvl 10 -x 3460 -y 1690 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 3 -x 770 -y 1330 -defaultsOSRD
preplace inst smartconnect_4 -pg 1 -lvl 4 -x 1200 -y 1150 -defaultsOSRD
preplace inst util_vector_logic_1 -pg 1 -lvl 4 -x 1200 -y 410 -defaultsOSRD
preplace inst UART2 -pg 1 -lvl 4 -x 1200 -y 250 -defaultsOSRD
preplace inst UART -pg 1 -lvl 5 -x 1590 -y 510 -defaultsOSRD
preplace netloc DDR_c0_ddr4_ui_clk_sync_rst 1 1 9 230 970 NJ 970 1000J 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 2910J 1170 3360
preplace netloc DDR_clock 1 2 8 620 1260 NJ 1260 NJ 1260 1800J 1110 NJ 1110 2510 1050 2910J 1110 3310
preplace netloc Ethernet_interrupt 1 5 1 1770 740n
preplace netloc RocketChip_aresetn 1 3 5 1030 1290 NJ 1290 NJ 1290 NJ 1290 2490
preplace netloc RocketChip_clock 1 1 7 NJ 1360 600 1270 1020 1270 NJ 1270 1780 1080 2120 840 2510J
preplace netloc UART2_RTSn 1 4 2 NJ 260 1790
preplace netloc UART2_TxD 1 4 2 NJ 240 1780
preplace netloc UART_RTSn 1 4 2 NJ 280 1750
preplace netloc UART_TxD 1 4 7 NJ 220 1800 220 NJ 220 NJ 220 NJ 220 NJ 220 NJ
preplace netloc axi_gpio_0_gpio_io_o 1 4 1 1380 990n
preplace netloc axi_gpio_1_gpio_io_o 1 4 6 1430J 1480 1760 1480 NJ 1480 2510J 1540 2900J 1760 NJ
preplace netloc axi_gpio_3_gpio_io_o 1 3 2 1040 880 1360
preplace netloc axi_iic_0_iic2intc_irpt 1 5 5 1800 620 NJ 620 NJ 620 NJ 620 3310
preplace netloc clk_wiz_0_clk_out2 1 1 8 220 1100 600 980 960 1060 1410 1120 1790 1120 NJ 1120 2520 1030 NJ
preplace netloc clk_wiz_0_locked 1 1 9 NJ 1400 590J 1390 NJ 1390 1370J 1380 1760J 1370 2160 1370 NJ 1370 2940J 1660 3340J
preplace netloc ddr4_1_c0_init_calib_complete 1 6 4 2180 1270 NJ 1270 2920J 1180 3350
preplace netloc interrupts 1 6 1 2150 770n
preplace netloc pcie_perstn 1 0 10 NJ 1500 NJ 1500 NJ 1500 NJ 1500 1400 1390 NJ 1390 NJ 1390 NJ 1390 2910 1700 NJ
preplace netloc proc_sys_reset_0_peripheral_aresetn 1 2 7 590 990 970 1300 1390 1130 1760 1100 NJ 1100 2530 1040 2950J
preplace netloc proc_sys_reset_1_peripheral_aresetn 1 8 1 2930 1190n
preplace netloc qdma_0_user_lnk_up1 1 6 5 2190 1680 NJ 1680 NJ 1680 3320 1500 NJ
preplace netloc reset 1 5 5 1790 1380 NJ 1380 NJ 1380 2950 1740 NJ
preplace netloc uart_0_interrupt 1 5 1 1790 560n
preplace netloc util_ds_buf_IBUF_DS_ODIV2 1 8 1 2920 1480n
preplace netloc util_ds_buf_IBUF_OUT 1 8 1 2930 1460n
preplace netloc util_vector_logic_0_Res 1 6 4 2170 1670 NJ 1670 NJ 1670 3330J
preplace netloc util_vector_logic_1_Res 1 4 1 1410 410n
preplace netloc xdma_0_axi_aclk 1 0 10 20 1460 NJ 1460 610 1400 NJ 1400 NJ 1400 NJ 1400 NJ 1400 NJ 1400 NJ 1400 3310
preplace netloc xlconcat_3_dout 1 4 7 NJ 1730 NJ 1730 NJ 1730 NJ 1730 NJ 1730 3340J 1820 3560
preplace netloc xlconstant_0_dout 1 3 3 1010 900 1430 870 1760
preplace netloc C0_SYS_CLK_0_1 1 0 9 NJ 1000 NJ 1000 NJ 1000 920J 1250 NJ 1250 NJ 1250 NJ 1250 2500J 1260 NJ
preplace netloc Ethernet2_M_AXI 1 4 4 1380J 690 1780J 900 2110J 860 2520
preplace netloc Ethernet2_TX_AXIS 1 4 1 1400 720n
preplace netloc Ethernet_M_AXI 1 5 1 1790 940n
preplace netloc Ethernet_TX_AXIS 1 3 3 1040 620 NJ 620 1750
preplace netloc RocketChip_IO_AXI4 1 3 5 1040 1240 NJ 1240 NJ 1240 NJ 1240 2500
preplace netloc RocketChip_MEM_AXI4 1 7 1 2490 830n
preplace netloc axi_bram_ctrl_0_BRAM_PORTA 1 4 1 N 70
preplace netloc axi_bram_ctrl_0_BRAM_PORTB 1 4 1 N 90
preplace netloc axi_iic_0_IIC 1 9 2 NJ 1010 NJ
preplace netloc ddr4_1_C0_DDR4 1 9 2 NJ 1240 NJ
preplace netloc pcie_refclk 1 0 8 NJ 1470 NJ 1470 NJ 1470 NJ 1470 NJ 1470 NJ 1470 NJ 1470 NJ
preplace netloc smartconnect_0_M00_AXI 1 3 2 930 890 1380J
preplace netloc smartconnect_0_M01_AXI 1 3 1 940 710n
preplace netloc smartconnect_0_M05_AXI 1 3 1 910 60n
preplace netloc smartconnect_0_M06_AXI 1 3 1 950 520n
preplace netloc smartconnect_0_M07_AXI 1 3 5 980J 630 NJ 630 NJ 630 NJ 630 2530
preplace netloc smartconnect_1_M00_AXI 1 8 1 2940 900n
preplace netloc smartconnect_2_M00_AXI 1 6 1 2140 920n
preplace netloc smartconnect_2_M01_AXI 1 6 2 2130 850 NJ
preplace netloc smartconnect_4_M00_AXI 1 4 1 1370 490n
preplace netloc smartconnect_4_M01_AXI 1 4 1 1420 950n
preplace netloc smartconnect_4_M02_AXI 1 3 1 940 1100n
preplace netloc smartconnect_4_M02_AXI1 1 4 5 NJ 1170 NJ 1170 NJ 1170 2520J 1250 2900
preplace netloc smartconnect_4_M03_AXI 1 3 1 990 960n
preplace netloc smartconnect_4_M04_AXI 1 3 1 930 1140n
preplace netloc xdma_0_M_AXI 1 2 8 620 640 NJ 640 NJ 640 NJ 640 NJ 640 NJ 640 NJ 640 3320
preplace netloc xdma_0_pcie_mgt 1 9 2 NJ 1480 NJ
preplace cgraphic comment_0 place left 577 1532 textcolor 4 linecolor 3
levelinfo -pg 1 0 120 410 770 1200 1590 1960 2340 2720 3130 3460 3580
pagesize -pg 1 -db -bbox -sgen -160 0 3710 1830
",
   "linecolor_comment_0":"",
   "textcolor_comment_0":""
}

  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_gid_msg -ssname BD::TCL -id 2050 -severity "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_riscv()
cr_bd_riscv ""
set_property REGISTERED_WITH_MANAGER "1" [get_files riscv.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files riscv.bd ] 

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcku15p-ffve1517-2-i -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcku15p-ffve1517-2-i" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcku15p-ffve1517-2-i -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcku15p-ffve1517-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
